#!/usr/bin/env node

const fs = require("fs-extra");
const glob = require("glob");
const { analyzeCode } = require("./geminiClient");

/**
 * Generate a README.md file by analyzing code files with the Gemini API.
 */
async function generateReadme() {
  console.log("Generating README.md...");

  const files = glob.sync("**/*.{js,ts,jsx,tsx,py}", {
    ignore: ["node_modules/**", "dist/**", "build/**"],
  });

  let content = "# Project Documentation\n\n";
  content += `## Files Analyzed\n\nThis README was generated by analyzing the following files:\n\n`;
  content += files.map((file) => `- ${file}`).join("\n") + "\n\n";

  for (const file of files) {
    const codeContent = fs.readFileSync(file, "utf-8");
    const analysis = await analyzeCode(file, codeContent);

    if (analysis) {
      content += `### ${file}\n\n`;
      content += `**Summary**: ${analysis.summary || "No summary available."}\n\n`;
      content += `**Functions**:\n`;
      if (analysis.functions && analysis.functions.length > 0) {
        analysis.functions.forEach((func) => {
          content += `- ${func.name}: ${func.description || "No description available."}\n`;
        });
      } else {
        content += "No functions documented.\n";
      }
      content += "\n";
    }
  }

  fs.writeFileSync("README.md", content);
  console.log("README.md has been successfully generated!");
}

// Execute the generateReadme function when the command is run
generateReadme();
